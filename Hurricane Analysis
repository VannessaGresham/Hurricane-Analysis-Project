# names of hurricanes
names = ['Cuba I', 'San Felipe II Okeechobee', 'Bahamas', 'Cuba II', 'CubaBrownsville', 'Tampico', 'Labor Day', 'New England', 'Carol', 'Janet', 'Carla', 'Hattie', 'Beulah', 'Camille', 'Edith', 'Anita', 'David', 'Allen', 'Gilbert', 'Hugo', 'Andrew', 'Mitch', 'Isabel', 'Ivan', 'Emily', 'Katrina', 'Rita', 'Wilma', 'Dean', 'Felix', 'Matthew', 'Irma', 'Maria', 'Michael']

# months of hurricanes
months = ['October', 'September', 'September', 'November', 'August', 'September', 'September', 'September', 'September', 'September', 'September', 'October', 'September', 'August', 'September', 'September', 'August', 'August', 'September', 'September', 'August', 'October', 'September', 'September', 'July', 'August', 'September', 'October', 'August', 'September', 'October', 'September', 'September', 'October']

# years of hurricanes
years = [1924, 1928, 1932, 1932, 1933, 1933, 1935, 1938, 1953, 1955, 1961, 1961, 1967, 1969, 1971, 1977, 1979, 1980, 1988, 1989, 1992, 1998, 2003, 2004, 2005, 2005, 2005, 2005, 2007, 2007, 2016, 2017, 2017, 2018]

# maximum sustained winds (mph) of hurricanes
max_sustained_winds = [165, 160, 160, 175, 160, 160, 185, 160, 160, 175, 175, 160, 160, 175, 160, 175, 175, 190, 185, 160, 175, 180, 165, 165, 160, 175, 180, 185, 175, 175, 165, 180, 175, 160]

# areas affected by each hurricane
areas_affected = [['Central America', 'Mexico', 'Cuba', 'Florida', 'The Bahamas'], ['Lesser Antilles', 'The Bahamas', 'United States East Coast', 'Atlantic Canada'], ['The Bahamas', 'Northeastern United States'], ['Lesser Antilles', 'Jamaica', 'Cayman Islands', 'Cuba', 'The Bahamas', 'Bermuda'], ['The Bahamas', 'Cuba', 'Florida', 'Texas', 'Tamaulipas'], ['Jamaica', 'Yucatn Peninsula'], ['The Bahamas', 'Florida', 'Georgia', 'The Carolinas', 'Virginia'], ['Southeastern United States', 'Northeastern United States', 'Southwestern Quebec'], ['Bermuda', 'New England', 'Atlantic Canada'], ['Lesser Antilles', 'Central America'], ['Texas', 'Louisiana', 'Midwestern United States'], ['Central America'], ['The Caribbean', 'Mexico', 'Texas'], ['Cuba', 'United States Gulf Coast'], ['The Caribbean', 'Central America', 'Mexico', 'United States Gulf Coast'], ['Mexico'], ['The Caribbean', 'United States East coast'], ['The Caribbean', 'Yucatn Peninsula', 'Mexico', 'South Texas'], ['Jamaica', 'Venezuela', 'Central America', 'Hispaniola', 'Mexico'], ['The Caribbean', 'United States East Coast'], ['The Bahamas', 'Florida', 'United States Gulf Coast'], ['Central America', 'Yucatn Peninsula', 'South Florida'], ['Greater Antilles', 'Bahamas', 'Eastern United States', 'Ontario'], ['The Caribbean', 'Venezuela', 'United States Gulf Coast'], ['Windward Islands', 'Jamaica', 'Mexico', 'Texas'], ['Bahamas', 'United States Gulf Coast'], ['Cuba', 'United States Gulf Coast'], ['Greater Antilles', 'Central America', 'Florida'], ['The Caribbean', 'Central America'], ['Nicaragua', 'Honduras'], ['Antilles', 'Venezuela', 'Colombia', 'United States East Coast', 'Atlantic Canada'], ['Cape Verde', 'The Caribbean', 'British Virgin Islands', 'U.S. Virgin Islands', 'Cuba', 'Florida'], ['Lesser Antilles', 'Virgin Islands', 'Puerto Rico', 'Dominican Republic', 'Turks and Caicos Islands'], ['Central America', 'United States Gulf Coast (especially Florida Panhandle)']]

# damages (USD($)) of hurricanes
damages = ['Damages not recorded', '100M', 'Damages not recorded', '40M', '27.9M', '5M', 'Damages not recorded', '306M', '2M', '65.8M', '326M', '60.3M', '208M', '1.42B', '25.4M', 'Damages not recorded', '1.54B', '1.24B', '7.1B', '10B', '26.5B', '6.2B', '5.37B', '23.3B', '1.01B', '125B', '12B', '29.4B', '1.76B', '720M', '15.1B', '64.8B', '91.6B', '25.1B']

# deaths for each hurricane
deaths = [90,4000,16,3103,179,184,408,682,5,1023,43,319,688,259,37,11,2068,269,318,107,65,19325,51,124,17,1836,125,87,45,133,603,138,3057,74]

# write your update damages function here:
conversion = {"M": 1000000,
              "B": 1000000000}

def update_damages(data):
  updated_damages = []
  for item in data:
    if item == "Damages not recorded":
      updated_damages.append(item)
    elif item[-1] == "M":
      updated_damages.append(float(item[:-1])*1000000)
    elif item[-1] == "B":
      updated_damages.append(float(item[:-1])*1000000000)
  return updated_damages

updated_damages = update_damages(damages)




# write your construct hurricane dictionary function here:
def hurricane_name_dictionary(hurricanes):
  hurricane_dictionary = {}
  for i in range(len(hurricanes)):
    hurricane_dictionary[hurricanes[i]] = {"Name": names[i],
    "Month": months[i],
    "Year": years[i],
    "Max Sustained Wind": max_sustained_winds[i],
    "Areas Affected": areas_affected[i],
    "Damages": updated_damages[i],
    "Deaths": deaths[i]}
  return hurricane_dictionary

hurricanes_by_name = hurricane_name_dictionary(names)




# write your construct hurricane by year dictionary function here:
def by_year(dictionary):
  hurricanes_year = {}
  for item in dictionary:
    year = dictionary[item]["Year"]
    hurricane = dictionary[item]
    if year in hurricanes_year:
      hurricanes_year[year].append(hurricane)
    else:
      hurricanes_year[year] = [hurricane]
  return hurricanes_year




# write your count affected areas function here:
def damaged_areas(dictionary):
  areas = {}
  for hurricane in dictionary:
    for area in dictionary[hurricane]["Areas Affected"]:
      if area in areas:
        areas[area] += 1
      else:
        areas[area] = 1
  return areas

damage_occurrences = damaged_areas(hurricanes_by_name)




# write your find most affected area function here:
def most_affected(dictionary):
  count = 1
  most_hit = {}
  for area in dictionary:
    if dictionary[area] > count:
      count = dictionary[area]
      most_hit[area] = count
  return most_hit




# write your greatest number of deaths function here:
def deadliest_hurricane(dictionary):
  deadliest = {}
  num_deaths = 0
  deadly_hurricane = ""
  for hurricane in dictionary:
    if dictionary[hurricane]["Deaths"] > num_deaths:
      deadly_hurricane = hurricane
      num_deaths = dictionary[hurricane]["Deaths"]
  deadliest[deadly_hurricane] = num_deaths
  return deadliest




# write your catgeorize by mortality function here:
mortality_scale = {0: 0,
                   1: 100,
                   2: 500,
                   3: 1000,
                   4: 10000}

def mortality_scale(dictionary):
  hurricanes_by_mortality = {0: [], 1: [], 2: [], 3: [], 4: [], 5: []}
  for hurricane in dictionary:
    if dictionary[hurricane]["Deaths"] <= 0:
      hurricanes_by_mortality[0].append({hurricane})
    elif dictionary[hurricane]["Deaths"] > 0 and dictionary[hurricane]["Deaths"] <= 100:
      hurricanes_by_mortality[1].append({hurricane})
    elif dictionary[hurricane]["Deaths"] > 100 and dictionary[hurricane]["Deaths"] <= 500:
      hurricanes_by_mortality[2].append({hurricane})
    elif dictionary[hurricane]["Deaths"] > 500 and dictionary[hurricane]["Deaths"] <= 1000:
      hurricanes_by_mortality[3].append({hurricane})
    elif dictionary[hurricane]["Deaths"] > 1000 and dictionary[hurricane]["Deaths"] <= 10000:
      hurricanes_by_mortality[4].append({hurricane})
    else:
      hurricanes_by_mortality[5].append({hurricane})
  return hurricanes_by_mortality




# write your greatest damage function here:
def most_damaging(dictionary):
  damage = 0
  worst_hurricane  = ""
  most_dmg_hurricane = {}
  for hurricane in dictionary:
    if dictionary[hurricane]["Damages"] == "Damages not recorded":
      continue
    if dictionary[hurricane]["Damages"] > damage:
      worst_hurricane = dictionary[hurricane]["Name"]
      damage = dictionary[hurricane]["Damages"]
  most_dmg_hurricane[worst_hurricane] = damage
  return most_dmg_hurricane




# write your catgeorize by damage function here:
damage_scale = {0: 0,
                1: 100000000,
                2: 1000000000,
                3: 10000000000,
                4: 50000000000}

def damage_rating(dictionary):
  dmg_rating = {0: [], 1: [], 2: [], 3: [], 4: [], 5: []}
  for hurricane in dictionary:
    if dictionary[hurricane]["Damages"] == "Damages not recorded":
      continue
    elif dictionary[hurricane]["Damages"] <= 0:
      dmg_rating[0].append({hurricane})
    elif dictionary[hurricane]["Damages"] > 0 and dictionary[hurricane]["Damages"] <= 100000000:
      dmg_rating[1].append({hurricane})
    elif dictionary[hurricane]["Damages"] > 100000000 and dictionary[hurricane]["Damages"] <= 1000000000:
      dmg_rating[2].append({hurricane})
    elif dictionary[hurricane]["Damages"] > 1000000000 and dictionary[hurricane]["Damages"] <= 10000000000:
      dmg_rating[3].append({hurricane})
    elif dictionary[hurricane]["Damages"] > 10000000000 and dictionary[hurricane]["Damages"] <= 50000000000:
      dmg_rating[4].append({hurricane})
    else:
      dmg_rating[5].append({hurricane})
  return dmg_rating
    
